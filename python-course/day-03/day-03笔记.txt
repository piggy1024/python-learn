

 ## 不定长参数
        --def sum(*nums):
        --def fn2(a,b,*c):
        --def  fn3(**a):
        --def fn(a:int,b:int,c:bool) - > int:
        --  # 命名空间 namespace
            # 它是变量存储的位置
            # 它实际就是实际上就是一个字典,是一个专门用来存储变量的字典 ##


            # locals()  获取当前作用域的命名空间 ,放在哪儿就获取哪里的命名空间
            # golbal() 过去全局作用域的命名空间

## lambda
        --# lambda 形参: 返回值
            r = map(lambda i : i+1, l)


## 装饰器

         -- def fn3(old):
                '''
                    用来对其他函数进行扩展，使其他函数可以在执行前打印开始执行，执行后打印执行结束

                    参数：
                        old 要扩展的函数对象
                '''
                # 创建一个新函数
                def new_function(*args , **kwargs):
                    print('fn3装饰~开始执行~~~~')
                    # 调用被扩展的函数
                    result = old(*args , **kwargs)
                    print('fn3装饰~执行结束~~~~')
                    # 返回函数的执行结果
                    return result

                # 返回新函数        
                return new_function

            @fn3
            @begin_end
            def say_hello():
                print('大家好~~~')

            say_hello()


